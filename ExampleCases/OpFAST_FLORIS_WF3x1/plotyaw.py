import matplotlib.pyplot as plt
import numpy
import pandas as pd
import control.matlab as cnt
import cp
import scipy.optimize as optim

dfdata = pd.read_csv('t1.T1.out', sep='\t', header=None, skiprows=10)
datadata = dfdata.values
dfdata2 = pd.read_csv('t2.T2.out', sep='\t', header=None, skiprows=10)
datadata2 = dfdata2.values
dfdata3 = pd.read_csv('t3.T3.out', sep='\t', header=None, skiprows=10)
datadata3 = dfdata3.values
iT = 0
nT = 3
nend = 30000
df = pd.read_csv('EPOWER.txt', header=None)
data = df.values[iT::nT,:]
df6 = pd.read_csv('ECROSS.txt', header=None)
data6 = df6.values[iT::nT,:]
df8 = pd.read_csv('EWIND.txt', header=None)
data8 = df8.values[iT::nT,:]

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata[:,0], datadata[:,21], 'r')
axes[0].set_title("T1 Yaw Angle w.r.t. Wind Direction", fontsize = 20)
axes[0].set_ylabel("T1 Yaw Angle (deg)", fontsize = 20)
axes[0].set_xlabel("Simulated Time (s)", fontsize = 20)
axes[0].tick_params(axis="x", labelsize=20)
axes[0].tick_params(axis="y", labelsize=20)
axes[1].plot(datadata2[:,0], datadata2[:,21], 'r')
axes[1].set_title("T2 Yaw Angle w.r.t. Wind Direction", fontsize = 20)
axes[1].set_ylabel("T2 Yaw Angle (deg)", fontsize = 20)
axes[1].set_xlabel("Simulated Time (s)", fontsize = 20)
axes[1].tick_params(axis="x", labelsize=20)
axes[1].tick_params(axis="y", labelsize=20)
plt.show()

plt.plot(datadata[:,0], datadata[:,1], 'b')
plt.title("T1 Wind Speed \n X-axis of Reference Farm Layout", fontsize = 20)
plt.ylabel("Wind Speed (m/s)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata[:,0], datadata[:,21], 'r')
plt.title("T1 Yaw Angle w.r.t. Wind Direction", fontsize = 20)
plt.ylabel("Yaw Angle", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata2[:,0], datadata2[:,1], 'b')
plt.title("T2 Wind Speed \n X-axis of Reference Farm Layout", fontsize = 20)
plt.ylabel("Wind Speed (m/s)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata2[:,0], datadata2[:,21], 'r')
plt.title("T2 Yaw Angle w.r.t. Wind Direction", fontsize = 20)
plt.ylabel("Yaw Angle", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata3[:,0], datadata3[:,1], 'b')
plt.title("T3 Wind Speed \n X-axis of Reference Farm Layout", fontsize = 20)
plt.ylabel("Wind Speed (m/s)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata3[:,0], datadata3[:,21], 'r')
plt.title("T3 Yaw Angle w.r.t. Wind Direction", fontsize = 20)
plt.ylabel("Yaw Angle", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata[:,0], datadata[:,23], 'b', datadata2[:,0], datadata2[:,23], 'r', datadata3[:,0], datadata3[:,23], 'g')
plt.title("Ct")
plt.show()

nn = min([len(data6[:,0]), len(data8[:,0]), len(datadata[:,0])])
Wind_mag = numpy.power(numpy.power(datadata[:nn:,1], 2) + numpy.power(datadata[:nn:,2], 2), 0.5)
plt.plot(data6[:nn:,2], numpy.arctan2(data6[:nn:,0], data8[:nn:,0])*180/numpy.pi, 'b', data6[:nn:,2], numpy.arctan2(data6[:nn:,1], data8[:nn:,0])*180/numpy.pi, 'y', datadata[:nn:,0], numpy.arctan2(datadata[:nn:,2] - numpy.multiply(Wind_mag, numpy.sin(datadata[:nn:,21] * numpy.pi/180.0)), datadata[:,1])*180/numpy.pi,'r', datadata[:nn:,0], numpy.arctan2(datadata[:nn:,2], datadata[:nn:,1])*180.0/numpy.pi, 'g')
plt.title("CROSS WIND ESTIMATE YAW ERROR", fontsize = 20)
plt.xlabel("SIMULATED TIME (s)", fontsize = 20)
plt.ylabel("WIND RELATIVE YAW ERROR (deg)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.ylim(-35,35)
plt.show()

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata[:,0], datadata[:,1], 'b')
axes[0].set_title("Wind X", fontsize = 20)
axes[0].set_ylabel("Wind X (m/s)", fontsize = 20)
axes[0].set_xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
axes[1].plot(datadata[:,0], datadata[:,2], 'r')
axes[1].set_title("Wind Y", fontsize = 20)
axes[1].set_ylabel("Wind X (m/s)", fontsize = 20)
axes[1].set_xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata[:,0], datadata[:,1], 'b', datadata2[:,0], datadata2[:,1], 'r' ,datadata3[:,0], datadata3[:,1], 'g')
plt.title("Wind U", fontsize = 20)
plt.ylabel("Wind U (m/s)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata2[:,0], datadata2[:,1], 'b')
plt.title("Wind U", fontsize = 20)
plt.ylabel("Wind U (m/s)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

plt.plot(datadata3[:,0], datadata3[:,1], 'b')
plt.title("Wind U", fontsize = 20)
plt.ylabel("Wind U (m/s)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata2[:,0], datadata2[:,1], 'b')
axes[0].set_title("Wind X", fontsize = 20)
axes[0].set_ylabel("Wind X (m/s)", fontsize = 20)
axes[0].set_xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
axes[1].plot(datadata2[:,0], datadata2[:,2], 'r')
axes[1].set_title("Wind Y", fontsize = 20)
axes[1].set_ylabel("Wind X (m/s)", fontsize = 20)
axes[1].set_xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata3[:,0], datadata3[:,1], 'b')
axes[0].set_title("Wind X", fontsize = 20)
axes[0].set_ylabel("Wind X (m/s)", fontsize = 20)
axes[0].set_xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
axes[1].plot(datadata3[:,0], datadata3[:,2], 'r')
axes[1].set_title("Wind Y", fontsize = 20)
axes[1].set_ylabel("Wind X (m/s)", fontsize = 20)
axes[1].set_xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata[:,0], datadata[:,21], 'b')
axes[0].set_title("Yaw Position")
axes[1].plot(datadata[:,0], datadata[:,22]*numpy.pi/180.0, 'r')
axes[1].set_title("Yaw Speed")
plt.show()

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata2[:,0], datadata2[:,21], 'b')
axes[0].set_title("Yaw Position")
axes[1].plot(datadata2[:,0], datadata2[:,22]*numpy.pi/180.0, 'r')
axes[1].set_title("Yaw Speed")
plt.show()

fig, axes = plt.subplots(2,sharex = True)
axes[0].plot(datadata3[:,0], datadata3[:,21], 'b')
axes[0].set_title("Yaw Position")
axes[1].plot(datadata3[:,0], datadata3[:,22]*numpy.pi/180.0, 'r')
axes[1].set_title("Yaw Speed")
plt.show()

plt.plot(datadata[:,0], datadata[:,52], 'b', datadata2[:,0], datadata2[:,52],'r', datadata3[:,0], datadata3[:,52], 'g')
plt.title("POWER", fontsize = 20)
plt.ylabel("POWER (kW)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()

nn = min([len(datadata[:,0]), len(datadata2[:,0]), len(datadata3[:,0])])
plt.plot(datadata[:nn:,0], datadata[:nn:,52]+datadata2[:nn:,52]+datadata3[:nn:,52],'g')
plt.title("POWER TOTAL", fontsize = 20)
plt.ylabel("POWER TOTAL (kW)", fontsize = 20)
plt.xlabel("Simulated Time (s)", fontsize = 20)
plt.xticks(fontsize=20, rotation=0)
plt.yticks(fontsize=20, rotation=0)
plt.show()